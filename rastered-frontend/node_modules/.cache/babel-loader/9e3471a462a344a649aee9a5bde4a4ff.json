{"ast":null,"code":"var _jsxFileName = \"/home/sk/io.rastered/rastered-frontend/src/components/filterdetails.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Form, FormControl } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ToggleOpen() {\n  _s();\n\n  const open = useState(false);\n}\n\n_s(ToggleOpen, \"9IqAkpsvg+0wDTLKnbUDGxDCeJU=\");\n\n_c = ToggleOpen;\nconst Ul = styled.ul`\n  height: ${({\n  height\n}) => height}px;\n  opacity: ${({\n  height\n}) => height > 0 ? 1 : 0};\n  overflow: hidden;\n  transition: 0.5s;\n`;\n_c2 = Ul;\nconst Wrap = styled.div``;\nconst ParamSlider = styled.input`\n  -webkit-appearance: none;\n  appearance: none;\n  min-width: 100px;\n  width: 100%;\n  height: 12px;\n  background: #061223;\n  outline: none;\n  opacity: 0.8;\n  -webkit-transition: 0.2s;\n  transition: opacity 0.2s;\n  border-radius: 2px;\n  box-shadow: 1.5px 5px 10px rgba(0, 0, 0, 0.3);\n`;\n_c3 = ParamSlider;\nexport const FilterDetails = props => {\n  _s2();\n\n  const content = useRef(null);\n  const [height, setHeight] = useState(0);\n\n  const toggleFilDetails = () => {\n    setHeight(height === 0 ? content.current.scrollHeight : 0);\n  };\n\n  const [parameters, setParameters] = useState([]);\n\n  const sliChange = e => {\n    let newParameters = [...parameters];\n    newParameters[e.currentTarget.attributes.target.value] = e.currentTarget.value;\n    console.log(\"props.target for slider: \" + e.currentTarget.attributes.target.value);\n    console.log(\"value: \" + e.currentTarget.value);\n    setParameters(newParameters);\n    console.log(\"newParameters contains: \" + newParameters[e.currentTarget.attributes.target.value]);\n  };\n\n  const getData = () => {\n    fetch(\"https://app.rastered.io/filter?valGam=\" + parameters[0] + \"&valExp=\" + parameters[1] + \"&valSli=100&\" + new Date().getTime(), {\n      method: \"GET\",\n      credentials: \"include\"\n    }).then(function (response) {\n      console.log(response);\n      return response.json();\n    }).then(function (jsonResponse) {\n      console.log(jsonResponse);\n    });\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      getData();\n    }, 468);\n    return () => {\n      clearInterval(interval);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: toggleFilDetails,\n      children: \"FILTER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Ul, {\n      height: height,\n      ref: content,\n      children: [\"Gamma\", /*#__PURE__*/_jsxDEV(ParamSlider, {\n        type: \"range\",\n        min: \"1\",\n        max: \"100\",\n        target: \"0\",\n        onChange: sliChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), \"Exposure\", /*#__PURE__*/_jsxDEV(ParamSlider, {\n        type: \"range\",\n        min: \"1\",\n        max: \"100\",\n        target: \"1\",\n        onChange: sliChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(FilterDetails, \"h2CrtUoULIIvxMWP4xYMCQHWNCU=\");\n\n_c4 = FilterDetails;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ToggleOpen\");\n$RefreshReg$(_c2, \"Ul\");\n$RefreshReg$(_c3, \"ParamSlider\");\n$RefreshReg$(_c4, \"FilterDetails\");","map":{"version":3,"sources":["/home/sk/io.rastered/rastered-frontend/src/components/filterdetails.jsx"],"names":["React","useState","useRef","useEffect","Form","FormControl","styled","createGlobalStyle","ToggleOpen","open","Ul","ul","height","Wrap","div","ParamSlider","input","FilterDetails","props","content","setHeight","toggleFilDetails","current","scrollHeight","parameters","setParameters","sliChange","e","newParameters","currentTarget","attributes","target","value","console","log","getData","fetch","Date","getTime","method","credentials","then","response","json","jsonResponse","interval","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { Form, FormControl } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport { createGlobalStyle } from \"styled-components\";\n\nfunction ToggleOpen() {\n  const open = useState(false);\n}\n\nconst Ul = styled.ul`\n  height: ${({ height }) => height}px;\n  opacity: ${({ height }) => (height > 0 ? 1 : 0)};\n  overflow: hidden;\n  transition: 0.5s;\n`;\n\nconst Wrap = styled.div``;\n\nconst ParamSlider = styled.input`\n  -webkit-appearance: none;\n  appearance: none;\n  min-width: 100px;\n  width: 100%;\n  height: 12px;\n  background: #061223;\n  outline: none;\n  opacity: 0.8;\n  -webkit-transition: 0.2s;\n  transition: opacity 0.2s;\n  border-radius: 2px;\n  box-shadow: 1.5px 5px 10px rgba(0, 0, 0, 0.3);\n`;\n\nexport const FilterDetails = (props) => {\n  const content = useRef(null);\n  const [height, setHeight] = useState(0);\n  const toggleFilDetails = () => {\n    setHeight(height === 0 ? content.current.scrollHeight : 0);\n  };\n  \n  const [parameters, setParameters] = useState([]);\n  \n  const sliChange = (e) => {\n  \tlet newParameters = [...parameters];\n  \tnewParameters[e.currentTarget.attributes.target.value] = e.currentTarget.value;\n  \tconsole.log(\"props.target for slider: \"+e.currentTarget.attributes.target.value);\n  \tconsole.log(\"value: \"+e.currentTarget.value)\n  \tsetParameters(newParameters);\n  \tconsole.log(\"newParameters contains: \"+newParameters[e.currentTarget.attributes.target.value]);\n  };\n  \n\n  const getData = () => {\n    fetch(\n      \"https://app.rastered.io/filter?valGam=\" +\n        parameters[0] +\n        \"&valExp=\" +\n        parameters[1] +\n        \"&valSli=100&\" +\n        new Date().getTime(),\n      { method: \"GET\", credentials: \"include\" }\n    )\n      .then(function (response) {\n        console.log(response);\n        return response.json();\n      })\n      .then(function (jsonResponse) {\n        console.log(jsonResponse);\n      });\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      getData();\n    }, 468);\n    return () => {\n      clearInterval(interval);\n    };\n  });\n\n  return (\n    <>\n      <h2 onClick={toggleFilDetails}>FILTER</h2>\n      <Ul height={height} ref={content}>\n        Gamma\n        <ParamSlider type=\"range\" min=\"1\" max=\"100\" target=\"0\" onChange={sliChange} />\n        Exposure\n        <ParamSlider type=\"range\" min=\"1\" max=\"100\" target=\"1\" onChange={sliChange} />\n      </Ul>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}