{"ast":null,"code":"var _jsxFileName = \"/home/sk/io.rastered/rastered-frontend/src/components/dropzone.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { Error } from \"./error\";\nimport { Loader } from \"./spinner\"; // this can go after icon integrated\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DropzoneContainerStyled = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tmargin: 0 auto;\n\tdisplay: flex;\n\tflex-direction: column;\n\ttext-align: center;\n`;\n_c = DropzoneContainerStyled;\nconst pulsate = keyframes`\n\t0% {\n\t\ttransform: scale(1.0):\n\t\ttransform: rotate3d(0.3,1,0.4,0deg);\n\t}\n\t50% {\n\t\ttransform: scale(1.25);\n\t\ttransform: rotate3d(0.3,1,0.4,180deg);\n\t}\n\t100% {\n\t\ttransform: scale(1.0);\n\t\ttransform: rotate3d(0.3,1,0.4,360deg);\n\t}\n`;\nconst DropzoneStyled = styled.div`\n\tmargin: 0 auto;\n\tflex: auto;\n\twidth: 40%;\n\tmax-height: 50%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\t${props => {\n  if (props.submitting) {\n    //return `background: linear-gradient(to right, #21a7eb 0%, #21a7eb ${props.progress}%, rgba(255,255,255,0.25) ${props.progress}%)`;\n    return `background: linear-gradient(to right, #21a7eb 0%, #21a7eb 50%, rgba(255,255,255,0.25) 50%);\n\t\t\t\tbackground-size: 200% 100%;\n\t\t\t\tbackground-position: ${100 - props.progress}% 0%;`;\n  }\n\n  if (props.dragged) return 'background-color: #21a7eb';\n  return `background-color: rgba(255,255,255,0.25); \n\t\t\t&:hover { \n\t\t\t\tbackground-color: rgba(255,255,255,0.35); \n\t\t\t}`;\n}};\n\tbackground-origin: border-box;\n\tborder: 3px solid ${props => props.dragged ? 'rgba(30,30,30,0.8)' : 'rgba(195,195,195,0.6)'};\n\tborder-style: dashed;\n\tborder-radius: 60px;\n\ttransition: all 0.5s ease,\n\t\t${props => {\n  if (props.progress <= 1 && props.submitting) return 'background-size none,';\n}}\n\t\tbackground-position 0.2s ease,\n\t\twidth 0.3s ease,\n\t\theight 0.3s ease,\n\t\tbackground-color 0.6s ease;\n\t@media (max-width: 768px) {\n\t\twidth: 90%;\n\t\tmax-height: 60%;\n\t}\n\t@media (max-height: 480px) {\n\t\tmax-height: 90%;\n\t}\n\t&:before {\n\t\tposition: relative;\n\t\tborder-radius: 60px;\n\t\twidth: 100%; height: 100%;\n\t\tcontent: '';\n\t\tborder: 200px solid red;\n\t}\n`;\n_c2 = DropzoneStyled;\nconst AddIconStyled = styled(AddIcon)`\n\t&& {\n\t\tfont-size: 100%;\n\t\tmargin-right: 5px;\n\t}\n`;\n_c3 = AddIconStyled;\nconst UploadIcon = styled.img`\n\twidth: 20%;\n\topacity: 50%;\n\tanimation: ${pulsate} 1.0s linear infinite;\n`;\n_c4 = UploadIcon;\nconst UploadButton = styled.button`\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\talign-items: center;\n\tjustify-content: center;\n\tmargin: auto;\n\tcolor: white;\n\tfont-weight: bold;\n\tpadding: 10px 15px 10px 15px;\n\tbackground-color: #061223;\n\tborder: none;\n\tborder-radius: 80px;\n\tbox-shadow: 0px 5px 16px rgba(0,0,0,0.4);\n\ttransition: all 0.2s ease;\n\t&:hover {\n\t\ttransform: scale(1.05);\n\t\tcolor: white;\n\t\tbackground-color: #21a7eb;\n\t\tbox-shadow: 0px 3px 8px rgba(0,0,0,0.75);\n\t}\n`;\n_c5 = UploadButton;\nexport const Dropzone = props => {\n  _s();\n\n  const [dragged, setDragged] = useState(false);\n  const [dropped, setDropped] = useState(false);\n  const [submitting, setSubmitting] = useState(false); //this needs to be set to false after testing CloudUploadIcon animation.\n\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [errorVisible, setErrorVisible] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(\"Undefined Error.\");\n\n  const dragOverHandler = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragged(true);\n  };\n\n  const dropHandler = async e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragged(false);\n    setDropped(true);\n\n    if (e.dataTransfer.items && e.dataTransfer.items[0].kind === 'file') {\n      inputFile = e.dataTransfer.items[0].getAsFile();\n      console.log(\"File name: \" + inputFile.name);\n\n      if (inputFile.type === 'image/jpeg') {\n        setErrorVisible(false);\n        setSubmitting(true);\n        await xhrFileUpload(inputFile);\n      } else {\n        setErrorMsg(\"This file is not an image.\");\n        setErrorVisible(true);\n        console.log(\"File type: \" + inputFile.type);\n      }\n    }\n\n    ;\n  };\n\n  let inputFile = useRef(null);\n\n  const handleSubmit = async e => {\n    if (e.target.files[0] && e.target.files[0] !== null) {\n      let file = e.target.files[0];\n      console.log(file.name);\n\n      if (file.type === 'image/jpeg') {\n        setErrorVisible(false);\n        setSubmitting(true);\n        await xhrFileUpload(file);\n      } else {\n        setErrorMsg(\"This file is not an image.\");\n        setErrorVisible(true);\n        console.log(\"File type: \" + file.type);\n      }\n    }\n  };\n\n  const xhrFileUpload = file => {\n    // const blob = new Blob([new Uint8Array(10*1024*1024)]);\n    const xhr = new XMLHttpRequest();\n\n    xhr.upload.onprogress = e => {\n      if (e.lengthComputable) {\n        setUploadProgress(Math.floor(e.loaded / e.total * 100));\n      }\n    };\n\n    xhr.upload.onloadend = () => {\n      setSubmitting(false);\n      props.triggerNextView();\n    };\n\n    xhr.open(\"PUT\", \"https://httpbin.org/put\", true);\n    xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\n    xhr.send(file); // xhr.send(blob);\n  };\n\n  console.log(uploadProgress);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DropzoneContainerStyled, {\n      children: [submitting ? `Uploading...` : `Pick the image you'd like to edit here.`, /*#__PURE__*/_jsxDEV(DropzoneStyled, {\n        onDragOver: dragOverHandler,\n        onDrop: dropHandler,\n        onDragLeave: () => setDragged(false),\n        dragged: dragged,\n        submitting: submitting,\n        progress: uploadProgress,\n        children: [dragged || submitting ? null : /*#__PURE__*/_jsxDEV(UploadButton, {\n          onClick: () => inputFile.current.click(),\n          children: [/*#__PURE__*/_jsxDEV(AddIconStyled, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 6\n          }, this), \" Choose File\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 5\n        }, this), submitting ? /*#__PURE__*/_jsxDEV(UploadIcon, {\n          src: \"upload.svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 20\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file\",\n          ref: inputFile,\n          onChange: handleSubmit,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 3\n    }, this), errorVisible ? /*#__PURE__*/_jsxDEV(Error, {\n      msg: errorMsg,\n      hide: () => setErrorVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 4\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(Dropzone, \"Ktizv6RdaCuJ9BGlzHFnKnnzajY=\");\n\n_c6 = Dropzone;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"DropzoneContainerStyled\");\n$RefreshReg$(_c2, \"DropzoneStyled\");\n$RefreshReg$(_c3, \"AddIconStyled\");\n$RefreshReg$(_c4, \"UploadIcon\");\n$RefreshReg$(_c5, \"UploadButton\");\n$RefreshReg$(_c6, \"Dropzone\");","map":{"version":3,"sources":["/home/sk/io.rastered/rastered-frontend/src/components/dropzone.jsx"],"names":["React","useState","useRef","styled","keyframes","AddIcon","Error","Loader","DropzoneContainerStyled","div","pulsate","DropzoneStyled","props","submitting","progress","dragged","AddIconStyled","UploadIcon","img","UploadButton","button","Dropzone","setDragged","dropped","setDropped","setSubmitting","uploadProgress","setUploadProgress","errorVisible","setErrorVisible","errorMsg","setErrorMsg","dragOverHandler","e","preventDefault","stopPropagation","dropHandler","dataTransfer","items","kind","inputFile","getAsFile","console","log","name","type","xhrFileUpload","handleSubmit","target","files","file","xhr","XMLHttpRequest","upload","onprogress","lengthComputable","Math","floor","loaded","total","onloadend","triggerNextView","open","setRequestHeader","send","current","click","display"],"mappings":"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","sourcesContent":["import React, {useState,useRef} from \"react\";\nimport styled,{keyframes} from \"styled-components\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { Error } from \"./error\";\nimport { Loader } from \"./spinner\";\t// this can go after icon integrated\n\nconst DropzoneContainerStyled = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tmargin: 0 auto;\n\tdisplay: flex;\n\tflex-direction: column;\n\ttext-align: center;\n`;\n\nconst pulsate = keyframes`\n\t0% {\n\t\ttransform: scale(1.0):\n\t\ttransform: rotate3d(0.3,1,0.4,0deg);\n\t}\n\t50% {\n\t\ttransform: scale(1.25);\n\t\ttransform: rotate3d(0.3,1,0.4,180deg);\n\t}\n\t100% {\n\t\ttransform: scale(1.0);\n\t\ttransform: rotate3d(0.3,1,0.4,360deg);\n\t}\n`;\n\nconst DropzoneStyled = styled.div`\n\tmargin: 0 auto;\n\tflex: auto;\n\twidth: 40%;\n\tmax-height: 50%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\t${props => {\n\t\tif (props.submitting) {\n\t\t\t//return `background: linear-gradient(to right, #21a7eb 0%, #21a7eb ${props.progress}%, rgba(255,255,255,0.25) ${props.progress}%)`;\n\t\t\treturn `background: linear-gradient(to right, #21a7eb 0%, #21a7eb 50%, rgba(255,255,255,0.25) 50%);\n\t\t\t\tbackground-size: 200% 100%;\n\t\t\t\tbackground-position: ${(100-props.progress)}% 0%;`;\n\t\t}\n\t\tif (props.dragged) return 'background-color: #21a7eb';\n\t\treturn `background-color: rgba(255,255,255,0.25); \n\t\t\t&:hover { \n\t\t\t\tbackground-color: rgba(255,255,255,0.35); \n\t\t\t}`;\n\t\t\n\t}};\n\tbackground-origin: border-box;\n\tborder: 3px solid ${props => props.dragged ? 'rgba(30,30,30,0.8)' : 'rgba(195,195,195,0.6)'};\n\tborder-style: dashed;\n\tborder-radius: 60px;\n\ttransition: all 0.5s ease,\n\t\t${props => { if (props.progress <= 1 && props.submitting) return 'background-size none,'; } }\n\t\tbackground-position 0.2s ease,\n\t\twidth 0.3s ease,\n\t\theight 0.3s ease,\n\t\tbackground-color 0.6s ease;\n\t@media (max-width: 768px) {\n\t\twidth: 90%;\n\t\tmax-height: 60%;\n\t}\n\t@media (max-height: 480px) {\n\t\tmax-height: 90%;\n\t}\n\t&:before {\n\t\tposition: relative;\n\t\tborder-radius: 60px;\n\t\twidth: 100%; height: 100%;\n\t\tcontent: '';\n\t\tborder: 200px solid red;\n\t}\n`;\n\nconst AddIconStyled = styled(AddIcon)`\n\t&& {\n\t\tfont-size: 100%;\n\t\tmargin-right: 5px;\n\t}\n`;\n\nconst UploadIcon = styled.img`\n\twidth: 20%;\n\topacity: 50%;\n\tanimation: ${pulsate} 1.0s linear infinite;\n`;\n\nconst UploadButton = styled.button`\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\talign-items: center;\n\tjustify-content: center;\n\tmargin: auto;\n\tcolor: white;\n\tfont-weight: bold;\n\tpadding: 10px 15px 10px 15px;\n\tbackground-color: #061223;\n\tborder: none;\n\tborder-radius: 80px;\n\tbox-shadow: 0px 5px 16px rgba(0,0,0,0.4);\n\ttransition: all 0.2s ease;\n\t&:hover {\n\t\ttransform: scale(1.05);\n\t\tcolor: white;\n\t\tbackground-color: #21a7eb;\n\t\tbox-shadow: 0px 3px 8px rgba(0,0,0,0.75);\n\t}\n`;\n\nexport const Dropzone = (props) =>\n{\t\n\tconst [dragged,setDragged] = useState(false);\n\tconst [dropped,setDropped] = useState(false);\n\tconst [submitting,setSubmitting] = useState(false); //this needs to be set to false after testing CloudUploadIcon animation.\n\tconst [uploadProgress,setUploadProgress] = useState(0);\n\t\n\tconst [errorVisible,setErrorVisible] = useState(false);\n\tconst [errorMsg,setErrorMsg] = useState(\"Undefined Error.\");\n\t\n\tconst dragOverHandler = (e) => {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tsetDragged(true);\n\t};\n\t\n\tconst dropHandler = async (e) => {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tsetDragged(false);\n\t\tsetDropped(true);\n\t\t\n\t\tif (e.dataTransfer.items && e.dataTransfer.items[0].kind === 'file') {\n\t\t\tinputFile = e.dataTransfer.items[0].getAsFile();\n\t\t\tconsole.log(\"File name: \"+inputFile.name);\n\t\t\tif (inputFile.type === 'image/jpeg') {\n\t\t\t\tsetErrorVisible(false);\n\t\t\t\tsetSubmitting(true);\n\t\t\t\tawait xhrFileUpload(inputFile);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsetErrorMsg(\"This file is not an image.\");\n\t\t\t\tsetErrorVisible(true);\n\t\t\t\tconsole.log(\"File type: \"+inputFile.type);\n\t\t\t}\n\t\t};\n\t};\n\t\n\tlet inputFile = useRef(null);\n\t\n\tconst handleSubmit = async (e) => {\n\t\tif (e.target.files[0] && e.target.files[0] !== null) {\n\t\t\tlet file = e.target.files[0];\n\t\t\tconsole.log(file.name);\n\t\t\tif (file.type === 'image/jpeg') {\n\t\t\t\tsetErrorVisible(false);\n\t\t\t\tsetSubmitting(true);\n\t\t\t\tawait xhrFileUpload(file);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsetErrorMsg(\"This file is not an image.\");\n\t\t\t\tsetErrorVisible(true);\n\t\t\t\tconsole.log(\"File type: \"+file.type);\n\t\t\t}\t\n\t\t}\n\t};\n\t\n\tconst xhrFileUpload = (file) => {\n\t\t// const blob = new Blob([new Uint8Array(10*1024*1024)]);\n\t\tconst xhr = new XMLHttpRequest();\n\t\txhr.upload.onprogress = (e) => {\n\t\t\tif (e.lengthComputable) {\n\t\t\t\tsetUploadProgress(Math.floor((e.loaded/e.total)*100));\n\t\t\t}\n\t\t};\n\t\txhr.upload.onloadend = () => {\n\t\t\tsetSubmitting(false);\n\t\t\tprops.triggerNextView();\n\t\t};\n\t\txhr.open(\"PUT\",\"https://httpbin.org/put\",true);\n\t\txhr.setRequestHeader(\"Content-Type\",\"application/octet-stream\");\n\t\txhr.send(file);\n\t\t// xhr.send(blob);\n\t};\n\tconsole.log(uploadProgress);\n\t\n\t\n\treturn(\n\t\t<>\n\t\t<DropzoneContainerStyled>\n\t\t\t{ submitting ? `Uploading...` : `Pick the image you'd like to edit here.` }\n\t\t\t<DropzoneStyled \n\t\t\t\tonDragOver={dragOverHandler} \n\t\t\t\tonDrop={dropHandler} \n\t\t\t\tonDragLeave={() => setDragged(false)} \n\t\t\t\tdragged={dragged}\n\t\t\t\tsubmitting={submitting}\n\t\t\t\tprogress={uploadProgress}\n\t\t\t>\n\t\t\t\t{ dragged || submitting ? null :\n\t\t\t\t<UploadButton onClick={() => inputFile.current.click()}>\n\t\t\t\t\t<AddIconStyled/> Choose File\n\t\t\t\t</UploadButton> }\n\t\t\t\t{ submitting ? <UploadIcon src=\"upload.svg\"/> : null }\n\t\t\t\t<input type='file' id='file' ref={inputFile} onChange={handleSubmit} style={{display:'none'}}/>\n\t\t\t</DropzoneStyled>\n\t\t</DropzoneContainerStyled>\n\t\t{ errorVisible ?\n\t\t\t<Error msg={errorMsg} hide={() => setErrorVisible(false)}/>\n\t\t: null }\n\t\t</>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}