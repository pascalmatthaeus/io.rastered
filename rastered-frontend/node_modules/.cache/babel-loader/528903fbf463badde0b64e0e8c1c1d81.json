{"ast":null,"code":"var _jsxFileName = \"/home/sk/io.rastered/rastered-frontend/src/components/dropzone.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport styled from \"styled-components\"; // svg embedded as an img element here is much more comfy to use, plus less bloat\n\nimport AddIcon from '@material-ui/icons/Add'; // material-icons may be uninstalled, just use svg downloaded inside /public folder\n\nimport { Error } from \"./error\";\nimport { Loader } from \"./spinner\"; // this can go after icon integrated\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DropzoneContainerStyled = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tmargin: 0 auto;\n\tdisplay: flex;\n\tflex-direction: column;\n\ttext-align: center;\n`;\n_c = DropzoneContainerStyled;\nconst DropzoneStyled = styled.div`\n\tmargin: 0 auto;\n\tflex: auto;\n\twidth: 40%;\n\tmax-height: 50%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tbackground-color: ${props => props.submitting ? 'red' : props.dragged ? '#21a7eb' : 'rgba(255,255,255,0.25)'};\n\tborder: 3px solid ${props => props.dragged ? 'rgba(30,30,30,0.8)' : 'rgba(195,195,195,0.6)'};\n\tborder-style: dashed;\n\tborder-radius: 60px;\n\ttransition: all 0.5s ease,\n\t\twidth 0.3s ease,\n\t\theight 0.3s ease,\n\t\tbackground-color 0.6s ease;\n\t&:hover {\n\t\tbackground-color: ${props => props.dragged ? '#21a7eb' : 'rgba(255,255,255,0.35)'};\n\t}\n\t@media (max-width: 768px) {\n\t\twidth: 90%;\n\t\tmax-height: 60%;\n\t}\n\t@media (max-height: 480px) {\n\t\tmax-height: 90%;\n\t}\n`;\n_c2 = DropzoneStyled;\nconst AddIconStyled = styled(AddIcon)`\n\t&& {\n\t\tfont-size: 100%;\n\t\tmargin-right: 5px;\n\t}\n`;\n_c3 = AddIconStyled;\nconst UploadIcon = styled.img`\n\twidth: 33.3%;\n`;\n_c4 = UploadIcon;\nconst UploadButton = styled.button`\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\talign-items: center;\n\tjustify-content: center;\n\tmargin: auto;\n\tcolor: white;\n\tfont-weight: bold;\n\tpadding: 10px 15px 10px 15px;\n\tbackground-color: #061223;\n\tborder: none;\n\tborder-radius: 80px;\n\tbox-shadow: 0px 5px 16px rgba(0,0,0,0.4);\n\ttransition: all 0.2s ease;\n\t&:hover {\n\t\ttransform: scale(1.05);\n\t\tcolor: white;\n\t\tbackground-color: #21a7eb;\n\t\tbox-shadow: 0px 3px 8px rgba(0,0,0,0.75);\n\t}\n`;\n_c5 = UploadButton;\nexport const Dropzone = props => {\n  _s();\n\n  const [dragged, setDragged] = useState(false);\n  const [dropped, setDropped] = useState(false);\n  const [submitting, setSubmitting] = useState(true); //this needs to be set to false after testing CloudUploadIcon animation.\n\n  const [errorVisible, setErrorVisible] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(\"Undefined Error.\");\n\n  const dropHandler = async e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragged(false);\n    setDropped(true);\n\n    if (e.dataTransfer.items && e.dataTransfer.items[0].kind === 'file') {\n      inputFile = e.dataTransfer.items[0].getAsFile();\n      console.log(\"File name: \" + inputFile.name);\n\n      if (inputFile.type === 'image/jpeg') {\n        setErrorVisible(false);\n        setSubmitting(true);\n        await fetch('app.rastered.io/push', {\n          method: 'POST',\n          credentials: 'include',\n          body: inputFile\n        });\n        setSubmitting(false);\n      } else {\n        setErrorMsg(\"This file is not an image.\");\n        setErrorVisible(true);\n        console.log(\"File type: \" + inputFile.type);\n      }\n    }\n\n    ;\n  };\n\n  const dragOverHandler = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragged(true);\n  };\n\n  let inputFile = useRef(null);\n\n  const handleSubmit = async e => {\n    if (e.target.files[0] && e.target.files[0] !== null) {\n      let file = e.target.files[0];\n      console.log(file.name);\n\n      if (file.type === 'image/jpeg') {\n        setErrorVisible(false);\n        setSubmitting(true);\n        await fetch('app.rastered.io/push', {\n          method: 'POST',\n          credentials: 'include',\n          body: file\n        });\n        setSubmitting(false);\n      } else {\n        setErrorMsg(\"This file is not an image.\");\n        setErrorVisible(true);\n        console.log(\"File type: \" + file.type);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DropzoneContainerStyled, {\n      children: [\"Pick the image you'd like to edit here.\", /*#__PURE__*/_jsxDEV(DropzoneStyled, {\n        onDragOver: dragOverHandler,\n        onDrop: dropHandler,\n        onDragLeave: () => setDragged(false),\n        dragged: dragged,\n        submitting: submitting,\n        children: [dragged || submitting ? null : /*#__PURE__*/_jsxDEV(UploadButton, {\n          onClick: () => inputFile.current.click(),\n          children: [/*#__PURE__*/_jsxDEV(AddIconStyled, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 6\n          }, this), \" Choose File\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 5\n        }, this), submitting ? /*#__PURE__*/_jsxDEV(UploadIcon, {\n          src: \"upload.svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 20\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file\",\n          ref: inputFile,\n          onChange: handleSubmit,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 3\n    }, this), errorVisible ? /*#__PURE__*/_jsxDEV(Error, {\n      msg: errorMsg,\n      hide: () => setErrorVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 4\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(Dropzone, \"Ks8URYUJBlLiSOlghYOHSBzVkqI=\");\n\n_c6 = Dropzone;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"DropzoneContainerStyled\");\n$RefreshReg$(_c2, \"DropzoneStyled\");\n$RefreshReg$(_c3, \"AddIconStyled\");\n$RefreshReg$(_c4, \"UploadIcon\");\n$RefreshReg$(_c5, \"UploadButton\");\n$RefreshReg$(_c6, \"Dropzone\");","map":{"version":3,"sources":["/home/sk/io.rastered/rastered-frontend/src/components/dropzone.jsx"],"names":["React","useState","useRef","styled","AddIcon","Error","Loader","DropzoneContainerStyled","div","DropzoneStyled","props","submitting","dragged","AddIconStyled","UploadIcon","img","UploadButton","button","Dropzone","setDragged","dropped","setDropped","setSubmitting","errorVisible","setErrorVisible","errorMsg","setErrorMsg","dropHandler","e","preventDefault","stopPropagation","dataTransfer","items","kind","inputFile","getAsFile","console","log","name","type","fetch","method","credentials","body","dragOverHandler","handleSubmit","target","files","file","current","click","display"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,MAAxB,QAAqC,OAArC;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAAyC;;AACzC,OAAOC,OAAP,MAAoB,wBAApB,C,CAA8C;;AAC9C,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,MAAT,QAAuB,WAAvB,C,CAAoC;;;;AAEpC,MAAMC,uBAAuB,GAAGJ,MAAM,CAACK,GAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;KAAMD,uB;AASN,MAAME,cAAc,GAAGN,MAAM,CAACK,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqBE,KAAK,IAAIA,KAAK,CAACC,UAAN,GAAmB,KAAnB,GAA2BD,KAAK,CAACE,OAAN,GAAgB,SAAhB,GAA4B,wBAAyB;AAC9G,qBAAqBF,KAAK,IAAIA,KAAK,CAACE,OAAN,GAAgB,oBAAhB,GAAuC,uBAAwB;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsBF,KAAK,IAAIA,KAAK,CAACE,OAAN,GAAgB,SAAhB,GAA4B,wBAAyB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BA;MAAMH,c;AA6BN,MAAMI,aAAa,GAAGV,MAAM,CAACC,OAAD,CAAU;AACtC;AACA;AACA;AACA;AACA,CALA;MAAMS,a;AAON,MAAMC,UAAU,GAAGX,MAAM,CAACY,GAAI;AAC9B;AACA,CAFA;MAAMD,U;AAIN,MAAME,YAAY,GAAGb,MAAM,CAACc,MAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArBA;MAAMD,Y;AAuBN,OAAO,MAAME,QAAQ,GAAIR,KAAD,IACxB;AAAA;;AACC,QAAM,CAACE,OAAD,EAASO,UAAT,IAAuBlB,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAACmB,OAAD,EAASC,UAAT,IAAuBpB,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAACU,UAAD,EAAYW,aAAZ,IAA6BrB,QAAQ,CAAC,IAAD,CAA3C,CAHD,CAGoD;;AAEnD,QAAM,CAACsB,YAAD,EAAcC,eAAd,IAAiCvB,QAAQ,CAAC,KAAD,CAA/C;AACA,QAAM,CAACwB,QAAD,EAAUC,WAAV,IAAyBzB,QAAQ,CAAC,kBAAD,CAAvC;;AAEA,QAAM0B,WAAW,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACE,eAAF;AACAX,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAIO,CAAC,CAACG,YAAF,CAAeC,KAAf,IAAwBJ,CAAC,CAACG,YAAF,CAAeC,KAAf,CAAqB,CAArB,EAAwBC,IAAxB,KAAiC,MAA7D,EAAqE;AACpEC,MAAAA,SAAS,GAAGN,CAAC,CAACG,YAAF,CAAeC,KAAf,CAAqB,CAArB,EAAwBG,SAAxB,EAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAcH,SAAS,CAACI,IAApC;;AACA,UAAIJ,SAAS,CAACK,IAAV,KAAmB,YAAvB,EAAqC;AACpCf,QAAAA,eAAe,CAAC,KAAD,CAAf;AACAF,QAAAA,aAAa,CAAC,IAAD,CAAb;AACA,cAAMkB,KAAK,CAAC,sBAAD,EAAyB;AACnCC,UAAAA,MAAM,EAAC,MAD4B;AAEnCC,UAAAA,WAAW,EAAC,SAFuB;AAGnCC,UAAAA,IAAI,EAACT;AAH8B,SAAzB,CAAX;AAKAZ,QAAAA,aAAa,CAAC,KAAD,CAAb;AACA,OATD,MAUK;AACJI,QAAAA,WAAW,CAAC,4BAAD,CAAX;AACAF,QAAAA,eAAe,CAAC,IAAD,CAAf;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAcH,SAAS,CAACK,IAApC;AACA;AACD;;AAAA;AACD,GAzBD;;AA2BA,QAAMK,eAAe,GAAIhB,CAAD,IAAO;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACE,eAAF;AAEAX,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,GALD;;AAOA,MAAIe,SAAS,GAAGhC,MAAM,CAAC,IAAD,CAAtB;;AAEA,QAAM2C,YAAY,GAAG,MAAOjB,CAAP,IAAa;AACjC,QAAIA,CAAC,CAACkB,MAAF,CAASC,KAAT,CAAe,CAAf,KAAqBnB,CAAC,CAACkB,MAAF,CAASC,KAAT,CAAe,CAAf,MAAsB,IAA/C,EAAqD;AACpD,UAAIC,IAAI,GAAGpB,CAAC,CAACkB,MAAF,CAASC,KAAT,CAAe,CAAf,CAAX;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYW,IAAI,CAACV,IAAjB;;AACA,UAAIU,IAAI,CAACT,IAAL,KAAc,YAAlB,EAAgC;AAC/Bf,QAAAA,eAAe,CAAC,KAAD,CAAf;AACAF,QAAAA,aAAa,CAAC,IAAD,CAAb;AACA,cAAMkB,KAAK,CAAC,sBAAD,EAAyB;AACnCC,UAAAA,MAAM,EAAC,MAD4B;AAEnCC,UAAAA,WAAW,EAAC,SAFuB;AAGnCC,UAAAA,IAAI,EAACK;AAH8B,SAAzB,CAAX;AAKA1B,QAAAA,aAAa,CAAC,KAAD,CAAb;AACA,OATD,MAUK;AACJI,QAAAA,WAAW,CAAC,4BAAD,CAAX;AACAF,QAAAA,eAAe,CAAC,IAAD,CAAf;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAcW,IAAI,CAACT,IAA/B;AACA;AACD;AAED,GArBD;;AAuBA,sBACC;AAAA,4BACA,QAAC,uBAAD;AAAA,yEAEC,QAAC,cAAD;AACC,QAAA,UAAU,EAAEK,eADb;AAEC,QAAA,MAAM,EAAEjB,WAFT;AAGC,QAAA,WAAW,EAAE,MAAMR,UAAU,CAAC,KAAD,CAH9B;AAIC,QAAA,OAAO,EAAEP,OAJV;AAKC,QAAA,UAAU,EAAED,UALb;AAAA,mBAOGC,OAAO,IAAID,UAAX,GAAwB,IAAxB,gBACF,QAAC,YAAD;AAAc,UAAA,OAAO,EAAE,MAAMuB,SAAS,CAACe,OAAV,CAAkBC,KAAlB,EAA7B;AAAA,kCACC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,kBADD;AAAA;AAAA;AAAA;AAAA;AAAA,gBARD,EAWGvC,UAAU,gBAAG,QAAC,UAAD;AAAY,UAAA,GAAG,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAAH,GAAoC,IAXjD,eAYC;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,MAAtB;AAA6B,UAAA,GAAG,EAAEuB,SAAlC;AAA6C,UAAA,QAAQ,EAAEW,YAAvD;AAAqE,UAAA,KAAK,EAAE;AAACM,YAAAA,OAAO,EAAC;AAAT;AAA5E;AAAA;AAAA;AAAA;AAAA,gBAZD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAkBE5B,YAAY,gBACb,QAAC,KAAD;AAAO,MAAA,GAAG,EAAEE,QAAZ;AAAsB,MAAA,IAAI,EAAE,MAAMD,eAAe,CAAC,KAAD;AAAjD;AAAA;AAAA;AAAA;AAAA,YADa,GAEZ,IApBF;AAAA,kBADD;AAwBA,CA5FM;;GAAMN,Q;;MAAAA,Q","sourcesContent":["import React, {useState,useRef} from \"react\";\nimport styled from \"styled-components\";\t\t// svg embedded as an img element here is much more comfy to use, plus less bloat\nimport AddIcon from '@material-ui/icons/Add';\t// material-icons may be uninstalled, just use svg downloaded inside /public folder\nimport { Error } from \"./error\";\nimport { Loader } from \"./spinner\";\t// this can go after icon integrated\n\nconst DropzoneContainerStyled = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tmargin: 0 auto;\n\tdisplay: flex;\n\tflex-direction: column;\n\ttext-align: center;\n`;\n\nconst DropzoneStyled = styled.div`\n\tmargin: 0 auto;\n\tflex: auto;\n\twidth: 40%;\n\tmax-height: 50%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tbackground-color: ${props => props.submitting ? 'red' : props.dragged ? '#21a7eb' : 'rgba(255,255,255,0.25)'};\n\tborder: 3px solid ${props => props.dragged ? 'rgba(30,30,30,0.8)' : 'rgba(195,195,195,0.6)'};\n\tborder-style: dashed;\n\tborder-radius: 60px;\n\ttransition: all 0.5s ease,\n\t\twidth 0.3s ease,\n\t\theight 0.3s ease,\n\t\tbackground-color 0.6s ease;\n\t&:hover {\n\t\tbackground-color: ${props => props.dragged ? '#21a7eb' : 'rgba(255,255,255,0.35)'};\n\t}\n\t@media (max-width: 768px) {\n\t\twidth: 90%;\n\t\tmax-height: 60%;\n\t}\n\t@media (max-height: 480px) {\n\t\tmax-height: 90%;\n\t}\n`;\n\nconst AddIconStyled = styled(AddIcon)`\n\t&& {\n\t\tfont-size: 100%;\n\t\tmargin-right: 5px;\n\t}\n`;\n\nconst UploadIcon = styled.img`\n\twidth: 33.3%;\n`;\n\nconst UploadButton = styled.button`\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\talign-items: center;\n\tjustify-content: center;\n\tmargin: auto;\n\tcolor: white;\n\tfont-weight: bold;\n\tpadding: 10px 15px 10px 15px;\n\tbackground-color: #061223;\n\tborder: none;\n\tborder-radius: 80px;\n\tbox-shadow: 0px 5px 16px rgba(0,0,0,0.4);\n\ttransition: all 0.2s ease;\n\t&:hover {\n\t\ttransform: scale(1.05);\n\t\tcolor: white;\n\t\tbackground-color: #21a7eb;\n\t\tbox-shadow: 0px 3px 8px rgba(0,0,0,0.75);\n\t}\n`;\n\nexport const Dropzone = (props) =>\n{\t\n\tconst [dragged,setDragged] = useState(false);\n\tconst [dropped,setDropped] = useState(false);\n\tconst [submitting,setSubmitting] = useState(true); //this needs to be set to false after testing CloudUploadIcon animation.\n\t\n\tconst [errorVisible,setErrorVisible] = useState(false);\n\tconst [errorMsg,setErrorMsg] = useState(\"Undefined Error.\");\n\t\n\tconst dropHandler = async (e) => {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tsetDragged(false);\n\t\tsetDropped(true);\n\t\t\n\t\tif (e.dataTransfer.items && e.dataTransfer.items[0].kind === 'file') {\n\t\t\tinputFile = e.dataTransfer.items[0].getAsFile();\n\t\t\tconsole.log(\"File name: \"+inputFile.name);\n\t\t\tif (inputFile.type === 'image/jpeg') {\n\t\t\t\tsetErrorVisible(false);\n\t\t\t\tsetSubmitting(true);\n\t\t\t\tawait fetch('app.rastered.io/push', { \n\t\t\t\t\tmethod:'POST',\n\t\t\t\t\tcredentials:'include',\n\t\t\t\t\tbody:inputFile\n\t\t\t\t});\n\t\t\t\tsetSubmitting(false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsetErrorMsg(\"This file is not an image.\");\n\t\t\t\tsetErrorVisible(true);\n\t\t\t\tconsole.log(\"File type: \"+inputFile.type);\n\t\t\t}\n\t\t};\n\t};\n\t\n\tconst dragOverHandler = (e) => {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\t\n\t\tsetDragged(true);\n\t};\n\n\tlet inputFile = useRef(null);\n\t\n\tconst handleSubmit = async (e) => {\n\t\tif (e.target.files[0] && e.target.files[0] !== null) {\n\t\t\tlet file = e.target.files[0];\n\t\t\tconsole.log(file.name);\n\t\t\tif (file.type === 'image/jpeg') {\n\t\t\t\tsetErrorVisible(false);\n\t\t\t\tsetSubmitting(true);\n\t\t\t\tawait fetch('app.rastered.io/push', { \n\t\t\t\t\tmethod:'POST',\n\t\t\t\t\tcredentials:'include',\n\t\t\t\t\tbody:file\n\t\t\t\t});\n\t\t\t\tsetSubmitting(false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsetErrorMsg(\"This file is not an image.\");\n\t\t\t\tsetErrorVisible(true);\n\t\t\t\tconsole.log(\"File type: \"+file.type);\n\t\t\t}\n\t\t}\n\t\t\n\t};\n\t\n\treturn(\n\t\t<>\n\t\t<DropzoneContainerStyled>\n\t\t\tPick the image you'd like to edit here.\n\t\t\t<DropzoneStyled \n\t\t\t\tonDragOver={dragOverHandler} \n\t\t\t\tonDrop={dropHandler} \n\t\t\t\tonDragLeave={() => setDragged(false)} \n\t\t\t\tdragged={dragged}\n\t\t\t\tsubmitting={submitting}\n\t\t\t>\n\t\t\t\t{ dragged || submitting ? null :\n\t\t\t\t<UploadButton onClick={() => inputFile.current.click()}>\n\t\t\t\t\t<AddIconStyled/> Choose File\n\t\t\t\t</UploadButton> }\n\t\t\t\t{ submitting ? <UploadIcon src=\"upload.svg\"/> : null }\n\t\t\t\t<input type='file' id='file' ref={inputFile} onChange={handleSubmit} style={{display:'none'}}/>\n\t\t\t</DropzoneStyled>\n\t\t</DropzoneContainerStyled>\n\t\t{ errorVisible ?\n\t\t\t<Error msg={errorMsg} hide={() => setErrorVisible(false)}/>\n\t\t: null }\n\t\t</>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}