{"ast":null,"code":"var _jsxFileName = \"/home/sk/io.rastered/rastered-frontend/src/components/filterdetails.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Form, FormControl } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ToggleOpen() {\n  _s();\n\n  const open = useState(false);\n}\n\n_s(ToggleOpen, \"9IqAkpsvg+0wDTLKnbUDGxDCeJU=\");\n\n_c = ToggleOpen;\nconst Ul = styled.ul`\n  height: ${({\n  height\n}) => height}px;\n  opacity: ${({\n  height\n}) => height > 0 ? 1 : 0};\n  overflow: hidden;\n  transition: 0.5s;\n`;\n_c2 = Ul;\nconst Wrap = styled.div``;\nconst ParamSlider = styled.input`\n  -webkit-appearance: none;\n  appearance: none;\n  min-width: 100px;\n  width: 100%;\n  height: 12px;\n  background: #061223;\n  outline: none;\n  opacity: 0.8;\n  -webkit-transition: 0.2s;\n  transition: opacity 0.2s;\n  border-radius: 2px;\n  box-shadow: 1.5px 5px 10px rgba(0, 0, 0, 0.3);\n`;\n_c3 = ParamSlider;\nexport const FilterDetails = props => {\n  _s2();\n\n  const list = [\"\", \"\", \"\"];\n  const content = useRef(null);\n  const [height, setHeight] = useState(0);\n  const valueSli = useState(100);\n\n  const toggleFilDetails = () => {\n    setHeight(height === 0 ? content.current.scrollHeight : 0);\n  };\n\n  const [valSli, setValSli] = useState(69);\n\n  const sliChange = e => {\n    setValSli(e.currentTarget.value);\n  };\n\n  const getData = () => {\n    fetch(\"https://app.rastered.io/filter?valGam=100&valExp=100&valSli=\" + valSli + \"&\" + new Date().getTime(), {\n      method: \"GET\",\n      credentials: \"include\"\n    }).then(function (response) {\n      console.log(response);\n      return response.json();\n    }).then(function (jsonResponse) {\n      console.log(jsonResponse);\n    });\n  };\n\n  useEffect(() => {\n    async function createPlayerData() {\n      async function setSource() {\n        const response = await fetch(\"https://app.rastered.io/filter\", {\n          credentials: \"include\"\n        });\n        const responseJson = await response.json();\n        const sk = await responseJson.streamKey;\n        let webrtcSources = await [{\n          type: \"webrtc\",\n          file: \"wss://stream.rastered.io:3334/app/stream\" + sk,\n          label: \"Viewport\"\n        }];\n        return webrtcSources;\n      }\n\n      const webrtcSources = await setSource();\n      let op = await document.querySelector(\"#player_id\");\n      let player = await window.OvenPlayer.create(op, {\n        sources: webrtcSources,\n        autoStart: true,\n        mute: true,\n        controls: false\n      });\n      console.log(webrtcSources);\n    }\n\n    createPlayerData();\n    const interval = setInterval(() => {\n      getData();\n    }, 468);\n    return () => {\n      clearInterval(interval);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: toggleFilDetails,\n      children: \"FILTER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Ul, {\n      height: height,\n      ref: content,\n      children: /*#__PURE__*/_jsxDEV(ParamSlider, {\n        type: \"range\",\n        min: \"1\",\n        max: \"100\",\n        onChange: sliChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(FilterDetails, \"6rnGxyd5UCA7ZkaZGBOozk3h78M=\");\n\n_c4 = FilterDetails;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ToggleOpen\");\n$RefreshReg$(_c2, \"Ul\");\n$RefreshReg$(_c3, \"ParamSlider\");\n$RefreshReg$(_c4, \"FilterDetails\");","map":{"version":3,"sources":["/home/sk/io.rastered/rastered-frontend/src/components/filterdetails.jsx"],"names":["React","useState","useRef","useEffect","Form","FormControl","styled","createGlobalStyle","ToggleOpen","open","Ul","ul","height","Wrap","div","ParamSlider","input","FilterDetails","props","list","content","setHeight","valueSli","toggleFilDetails","current","scrollHeight","valSli","setValSli","sliChange","e","currentTarget","value","getData","fetch","Date","getTime","method","credentials","then","response","console","log","json","jsonResponse","createPlayerData","setSource","responseJson","sk","streamKey","webrtcSources","type","file","label","op","document","querySelector","player","window","OvenPlayer","create","sources","autoStart","mute","controls","interval","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { Form, FormControl } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport { createGlobalStyle } from \"styled-components\";\n\nfunction ToggleOpen() {\n  const open = useState(false);\n}\n\nconst Ul = styled.ul`\n  height: ${({ height }) => height}px;\n  opacity: ${({ height }) => (height > 0 ? 1 : 0)};\n  overflow: hidden;\n  transition: 0.5s;\n`;\n\nconst Wrap = styled.div``;\n\nconst ParamSlider = styled.input`\n  -webkit-appearance: none;\n  appearance: none;\n  min-width: 100px;\n  width: 100%;\n  height: 12px;\n  background: #061223;\n  outline: none;\n  opacity: 0.8;\n  -webkit-transition: 0.2s;\n  transition: opacity 0.2s;\n  border-radius: 2px;\n  box-shadow: 1.5px 5px 10px rgba(0, 0, 0, 0.3);\n`;\n\nexport const FilterDetails = (props) => {\n  const list = [\"\", \"\", \"\"];\n  const content = useRef(null);\n  const [height, setHeight] = useState(0);\n  const valueSli = useState(100);\n  const toggleFilDetails = () => {\n    setHeight(height === 0 ? content.current.scrollHeight : 0);\n  };\n  const [valSli, setValSli] = useState(69);\n  const sliChange = (e) => {\n    setValSli(e.currentTarget.value);\n  };\n\n  const getData = () => {\n    fetch(\n      \"https://app.rastered.io/filter?valGam=100&valExp=100&valSli=\" +\n        valSli +\n        \"&\" +\n        new Date().getTime(),\n      { method: \"GET\", credentials: \"include\" }\n    )\n      .then(function (response) {\n        console.log(response);\n        return response.json();\n      })\n      .then(function (jsonResponse) {\n        console.log(jsonResponse);\n      });\n  };\n\n  useEffect(() => {\n    async function createPlayerData() {\n\t\tasync function setSource() {\n\t\t\tconst response = await fetch(\"https://app.rastered.io/filter\",\n\t\t\t\t{credentials:\"include\"});\n\t\t\tconst responseJson = await response.json();\n\t\t\tconst sk = await responseJson.streamKey;\n\t\t\tlet webrtcSources = await [\n\t\t\t  {\n\t\t\t\ttype: \"webrtc\",\n\t\t\t\tfile: \"wss://stream.rastered.io:3334/app/stream\"+sk,\n\t\t\t\tlabel: \"Viewport\",\n\t\t\t  },\n\t\t\t];\n\t\t\treturn webrtcSources;\n\t\t}\n\t\tconst webrtcSources = await setSource();\n\n\t\tlet op = await document.querySelector(\"#player_id\");\n\t\tlet player = await window.OvenPlayer.create(op, {\n\t\t  sources: webrtcSources,\n\t\t  autoStart: true,\n\t\t  mute: true,\n\t\t  controls: false,\n\t\t});\n\t\t\n\t\tconsole.log(webrtcSources);\n\t}\n\tcreatePlayerData();\n\t\n  \n    const interval = setInterval(() => {\n      getData();\n    }, 468);\n    return () => {\n      clearInterval(interval);\n    };\n  });\n\n  return (\n    <>\n      <h2 onClick={toggleFilDetails}>FILTER</h2>\n      <Ul height={height} ref={content}>\n        {/*list.map((item, index) => (\n          <li key={index}>{item}</li>\n        ))*/}\n        <ParamSlider type=\"range\" min=\"1\" max=\"100\" onChange={sliChange} />\n        {/*}<b>{valSli}</b>*/}\n        {/*<ParamSlider type=\"range\" min=\"1\" max=\"100\" />\n        <ParamSlider type=\"range\" min=\"1\" max=\"100\" />\n        <ParamSlider type=\"range\" min=\"1\" max=\"100\" />*/}\n      </Ul>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}