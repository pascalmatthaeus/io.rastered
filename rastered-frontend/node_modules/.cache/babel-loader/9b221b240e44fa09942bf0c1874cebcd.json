{"ast":null,"code":"var _jsxFileName = \"/home/sk/rastered-frontend/src/components/Sidebar.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n/* This defines the actual bar going down the screen */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledSideNav = styled.div`\n  position: fixed; /* Fixed Sidebar (stay in place on scroll and position relative to viewport) */\n  height: 100%;\n  width: 3%; /* Set the width of the sidebar */\n  z-index: 1; /* Stay on top of everything */\n  top: 3.4em; /* Stay at the top */\n  background-color: #222; /* Black */\n  overflow-x: hidden; /* Disable horizontal scroll */\n  padding-top: 10px;\n`;\n_c = StyledSideNav;\nconst StyledNavItem = styled.div`\n  height: 2%;\n  width: 2%; /* width must be same size as NavBar to center */\n  padding-left: 0%;\n  text-align: left; /* Aligns <a> inside of NavIcon div */\n  margin-bottom: 1em; /* Puts space between NavItems */\n  a {\n    font-size: 50%;\n    color: ${props => props.active ? \"#21a7eb\" : \"grey\"};\n    text-decoration: none;\n    :hover {\n      color: ${props => props.active ? \"#6fccfc\" : \"#6dccfc\"};\n      text-decoration: none; /* Gets rid of underlining of icons */\n    }\n  }\n`;\n_c2 = StyledNavItem;\nconst NavIcon = styled.div`\n  padding-left: 25%;\n  text-align: left;\n`;\n_c3 = NavIcon;\n\nclass SideNav extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onItemClick = path => {\n      this.setState({\n        activePath: path\n      });\n      /* Sets activePath which causes rerender which causes CSS to change */\n    };\n\n    this.state = {\n      activePath: \"/\",\n      items: [{\n        path: \"/\"\n        /* path is used as id to check which NavItem is active basically */\n        ,\n        name: \"Home\",\n        css: \"fa fa-fw fa-home\",\n        key: 1\n        /* Key is required, else console throws error. Does this please you Mr. Browser?! */\n\n      }, {\n        path: \"/about\",\n        name: \"About\",\n        css: \"fa fa-fw fa-clock\",\n        key: 2\n      }, {\n        path: \"/NoMatch\",\n        name: \"NoMatch\",\n        css: \"fas fa-hashtag\",\n        key: 3\n      }]\n    };\n  }\n\n  render() {\n    const {\n      items,\n      activePath\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(StyledSideNav, {\n      children:\n      /* items = just array AND map() loops thru that array AND item is param of that loop */\n      items.map(item => {\n        /* Return however many NavItems in array to be rendered */\n        return /*#__PURE__*/_jsxDEV(NavItem, {\n          path: item.path,\n          name: item.name,\n          css: item.css,\n          onItemClick: this.onItemClick\n          /* Simply passed an entire function to onClick prop */\n          ,\n          active: item.path === activePath\n        }, item.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default class Sidebar extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(SideNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass NavItem extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      const {\n        path,\n        onItemClick\n      } = this.props;\n      onItemClick(path);\n    };\n  }\n\n  render() {\n    const {\n      active\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(StyledNavItem, {\n      active: active,\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: this.props.path,\n        className: this.props.css,\n        onClick: this.handleClick,\n        children: /*#__PURE__*/_jsxDEV(NavIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledSideNav\");\n$RefreshReg$(_c2, \"StyledNavItem\");\n$RefreshReg$(_c3, \"NavIcon\");","map":{"version":3,"sources":["/home/sk/rastered-frontend/src/components/Sidebar.js"],"names":["React","BrowserRouter","Router","Route","Link","styled","StyledSideNav","div","StyledNavItem","props","active","NavIcon","SideNav","Component","constructor","onItemClick","path","setState","activePath","state","items","name","css","key","render","map","item","Sidebar","NavItem","handleClick"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport styled from \"styled-components\";\n/* This defines the actual bar going down the screen */\nconst StyledSideNav = styled.div`\n  position: fixed; /* Fixed Sidebar (stay in place on scroll and position relative to viewport) */\n  height: 100%;\n  width: 3%; /* Set the width of the sidebar */\n  z-index: 1; /* Stay on top of everything */\n  top: 3.4em; /* Stay at the top */\n  background-color: #222; /* Black */\n  overflow-x: hidden; /* Disable horizontal scroll */\n  padding-top: 10px;\n`;\n\nconst StyledNavItem = styled.div`\n  height: 2%;\n  width: 2%; /* width must be same size as NavBar to center */\n  padding-left: 0%;\n  text-align: left; /* Aligns <a> inside of NavIcon div */\n  margin-bottom: 1em; /* Puts space between NavItems */\n  a {\n    font-size: 50%;\n    color: ${(props) => (props.active ? \"#21a7eb\" : \"grey\")};\n    text-decoration: none;\n    :hover {\n      color: ${(props) => (props.active ? \"#6fccfc\" : \"#6dccfc\")};\n      text-decoration: none; /* Gets rid of underlining of icons */\n    }\n  }\n`;\n\nconst NavIcon = styled.div`\n  padding-left: 25%;\n  text-align: left;\n`;\n\nclass SideNav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activePath: \"/\",\n      items: [\n        {\n          path:\n            \"/\" /* path is used as id to check which NavItem is active basically */,\n          name: \"Home\",\n          css: \"fa fa-fw fa-home\",\n          key: 1 /* Key is required, else console throws error. Does this please you Mr. Browser?! */,\n        },\n        {\n          path: \"/about\",\n          name: \"About\",\n          css: \"fa fa-fw fa-clock\",\n          key: 2,\n        },\n        {\n          path: \"/NoMatch\",\n          name: \"NoMatch\",\n          css: \"fas fa-hashtag\",\n          key: 3,\n        },\n      ],\n    };\n  }\n  onItemClick = (path) => {\n    this.setState({\n      activePath: path,\n    }); /* Sets activePath which causes rerender which causes CSS to change */\n  };\n  render() {\n    const { items, activePath } = this.state;\n    return (\n      <StyledSideNav>\n        {\n          /* items = just array AND map() loops thru that array AND item is param of that loop */\n          items.map((item) => {\n            /* Return however many NavItems in array to be rendered */\n            return (\n              <NavItem\n                path={item.path}\n                name={item.name}\n                css={item.css}\n                onItemClick={this.onItemClick}\n                /* Simply passed an entire function to onClick prop */ active={\n                  item.path === activePath\n                }\n                key={item.key}\n              />\n            );\n          })\n        }\n      </StyledSideNav>\n    );\n  }\n}\n\nexport default class Sidebar extends React.Component {\n  render() {\n    return <SideNav></SideNav>;\n  }\n}\n\nclass NavItem extends React.Component {\n  handleClick = () => {\n    const { path, onItemClick } = this.props;\n    onItemClick(path);\n  };\n  render() {\n    const { active } = this.props;\n    return (\n      <StyledNavItem active={active}>\n        <Link\n          to={this.props.path}\n          className={this.props.css}\n          onClick={this.handleClick}\n        >\n          <NavIcon></NavIcon>\n        </Link>\n      </StyledNavItem>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}