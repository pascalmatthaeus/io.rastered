{"ast":null,"code":"var _jsxFileName = \"/home/sk/rastered-frontend/src/components/filterdetails.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { Form, FormControl } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ToggleOpen() {\n  _s();\n\n  const open = useState(false);\n}\n\n_s(ToggleOpen, \"9IqAkpsvg+0wDTLKnbUDGxDCeJU=\");\n\n_c = ToggleOpen;\nconst Ul = styled.ul`\n  height: ${({\n  height\n}) => height}px;\n  opacity: ${({\n  height\n}) => height > 0 ? 1 : 0};\n`;\nexport const FilterDetails = props => {\n  _s2();\n\n  const list = [\"Test1\", \"Test2\", \"Test3\"];\n  const content = useRef(null);\n  const [height, setHeight] = useState(0);\n\n  const toggleFilDetails = () => {\n    setHeight(height === 0 ? content.current.scrollHeight : 0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: toggleFilDetails,\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      height: height,\n      ref: content,\n      children: list.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(FilterDetails, \"w4P2JyLFuZZerJmSHPwLKTtLFZU=\");\n\n_c2 = FilterDetails;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ToggleOpen\");\n$RefreshReg$(_c2, \"FilterDetails\");","map":{"version":3,"sources":["/home/sk/rastered-frontend/src/components/filterdetails.jsx"],"names":["React","useState","useRef","Form","FormControl","styled","createGlobalStyle","ToggleOpen","open","Ul","ul","height","FilterDetails","props","list","content","setHeight","toggleFilDetails","current","scrollHeight","map","item","index"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,iBAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAMC,IAAI,GAAGP,QAAQ,CAAC,KAAD,CAArB;AACD;;GAFQM,U;;KAAAA,U;AAIT,MAAME,EAAE,GAAGJ,MAAM,CAACK,EAAG;AACrB,YAAY,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgBA,MAAO;AACnC,aAAa,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAiBA,MAAM,GAAG,CAAT,GAAa,CAAb,GAAiB,CAAG;AAClD,CAHA;AAKA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AACtC,QAAMC,IAAI,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAAb;AACA,QAAMC,OAAO,GAAGb,MAAM,CAAC,IAAD,CAAtB;AACA,QAAM,CAACS,MAAD,EAASK,SAAT,IAAsBf,QAAQ,CAAC,CAAD,CAApC;;AAEA,QAAMgB,gBAAgB,GAAG,MAAM;AAC7BD,IAAAA,SAAS,CAACL,MAAM,KAAK,CAAX,GAAeI,OAAO,CAACG,OAAR,CAAgBC,YAA/B,GAA8C,CAA/C,CAAT;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAI,MAAA,OAAO,EAAEF,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,MAAM,EAAEN,MAAZ;AAAoB,MAAA,GAAG,EAAEI,OAAzB;AAAA,gBACGD,IAAI,CAACM,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,kBACR;AAAA,kBAAiBD;AAAjB,SAASC,KAAT;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAUD,CAnBM;;IAAMV,a;;MAAAA,a","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Form, FormControl } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport { createGlobalStyle } from \"styled-components\";\n\nfunction ToggleOpen() {\n  const open = useState(false);\n}\n\nconst Ul = styled.ul`\n  height: ${({ height }) => height}px;\n  opacity: ${({ height }) => (height > 0 ? 1 : 0)};\n`;\n\nexport const FilterDetails = (props) => {\n  const list = [\"Test1\", \"Test2\", \"Test3\"];\n  const content = useRef(null);\n  const [height, setHeight] = useState(0);\n\n  const toggleFilDetails = () => {\n    setHeight(height === 0 ? content.current.scrollHeight : 0);\n  };\n\n  return (\n    <>\n      <h2 onClick={toggleFilDetails}>Click me</h2>\n      <ul height={height} ref={content}>\n        {list.map((item, index) => (\n          <li key={index}>{item}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}